package model

import (
	"encoding/json"

	v1 "github.com/anchore/grype-db/pkg/db/v1"
)

const (
	VulnerabilityMetadataTableName = "vulnerability_metadata"
)

type VulnerabilityMetadataModel struct {
	ID           string `gorm:"primary_key; column: id;"`
	RecordSource string `gorm:"primary_key; column: record_source;"`
	Severity     string `gorm:"column: severity"`
	Links        string `gorm:"column: links"`
}

func (VulnerabilityMetadataModel) TableName() string {
	return VulnerabilityMetadataTableName
}

func NewVulnerabilityMetadataModel(metadata v1.VulnerabilityMetadata) VulnerabilityMetadataModel {
	links, err := json.Marshal(metadata.Links)
	if err != nil {
		// TODO: just no
		panic(err)
	}

	return VulnerabilityMetadataModel{
		ID:           metadata.ID,
		RecordSource: metadata.RecordSource,
		Severity:     metadata.Severity,
		Links:        string(links),
	}
}

func (m *VulnerabilityMetadataModel) Inflate() v1.VulnerabilityMetadata {
	var links []string
	err := json.Unmarshal([]byte(m.Links), &links)
	if err != nil {
		// TODO: just no
		panic(err)
	}

	return v1.VulnerabilityMetadata{
		ID:           m.ID,
		RecordSource: m.RecordSource,
		Severity:     m.Severity,
		Links:        links,
	}
}
